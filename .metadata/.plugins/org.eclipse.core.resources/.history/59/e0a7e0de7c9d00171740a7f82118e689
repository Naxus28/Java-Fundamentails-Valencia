
public class ExceptionsVideoExamples {

	public static void main(String[] args) {
		exceptionOne();
		
		exceptionTwo();
		System.out.println("In main"); // If there is an unhandled exception on any level of the stack call that starts here, this statement will not be printed
		
	}
	
	/**
	 * first exception example
	 */
	public static void exceptionOne() {
		int a, b = 6;
		 
		 try {
			 a = b / 0;
		 } catch(ArithmeticException ae) {
			 a = b;
			 System.out.println("Arithmetic Exception: " + ae.getMessage());
		 }
	}
	
	/**
	 * second exception example
	 */
	public static void exceptionTwo() {
		System.out.println("In exceptionTwo");
		exceptionTwoStackOne(); // If there is an unhandled exception on any level of the stack call that starts here, this statement will not be printed
		System.out.println("Not printed if there is an unhandled excpetion in exceptionTwoStackOne");
	}
	
	public static void exceptionTwoStackOne() {
		int num;
		System.out.println("In exceptionTwoStackOne");
		
		/**
		 * This line throws an exception. If the exception is not handled no code will be executed after this line; 
		 * this includes code bellow the function callers (written in functions up in the stack) that invoked "exceptionTwoStackOne": exceptionTwoStackOne() and exceptionTwo()
		 */
		num = 1 / 0;
	}

}
