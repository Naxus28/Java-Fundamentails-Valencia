
public class Room {
	private int length, 
				width, 
				closets;
	
	private String floorCovering;
	
	/**
	 * default constructor
	 */
	public Room() {}
	
	
	public Room(int length, int width, String floorCovering, int closets) {
		this.length = length;
		this.width = width;
		this.floorCovering = floorCovering;
		this.closets = closets;
	}
	
	/**
	 * @return the length
	 */
	public int getLength() {
		return length;
	}

	/**
	 * @param length the length to set
	 */
	public void setLength(int length) {
		this.length = length;
	}

	/**
	 * @return the width
	 */
	public int getWidth() {
		return width;
	}

	/**
	 * @param width the width to set
	 */
	public void setWidth(int width) {
		this.width = width;
	}

	/**
	 * @return the floorCovering
	 */
	public String getFloorCovering() {
		return floorCovering;
	}

	/**
	 * @param floorCovering the floorCovering to set
	 */
	public void setFloorCovering(String floorCovering) {
		this.floorCovering = floorCovering;
	}

	/**
	 * @return the closets
	 */
	public int getClosets() {
		return closets;
	}

	/**
	 * @param closets the closets to set
	 */
	public void setClosets(int closets) {
		this.closets = closets;
	}
	
	/*
	 * I found it reasonable that a room knew how to calculate its own area and perimeter
	 */
	
	/**
	 * @return the area
	 */
	public int getArea() {
		return width * length;
	}
	
	/**
	 * @return the perimeter
	 */
	public int getPerimeter() {
		return 2 * (width + length);
	}
	
	@Override
	public String toString() {
		return "Room lenght:" + length + "feet, width: " + width + "feet, area: " + getArea() + 
				"sq ft., perimeter: " + getPerimeter() + ", floor covering: " + floorCovering + 
					", and number of closets: " + closets;
	}

}
