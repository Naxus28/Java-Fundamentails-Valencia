import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

public class TestAthletes {
	static String menuChoice;
	static Baseballer Barry = new Baseballer("Barry", "Blank", 24, "left");
	static Footballer Payton = new Footballer("Payton", "Manning", 29,"offense");
	static HockeyPlayer  Mario = new HockeyPlayer("Mario", "Lanza", 30, "Bauer Vapor 1X");
	static Golfer Tiger = new Golfer("Tiger", "Woods", 34, "Nike");
	static Tennist Roger = new Tennist("Roger", "Federer", 38, true);
    static Athlete [] athletes = {Barry, Payton, Mario, Tiger, Roger};
	
	public static void main(String[] args) {
	    // initialize person array and assign three sports men to it
	    Person [] people =  new Person[1000];
	    people[0] = Barry;
	    people[1] = Payton;
	    people[2] = Mario;
	    
	    menuAction();
	    
	}
	
	// helper methods
	private static void menuAction() {
		menuChoice = getUserChoice();
		
		if (menuChoice == "Add a new athlete") {
			addAthlete();
		} else if (menuChoice == "Display all athletes") {
			displayAthletes();
		} else if (menuChoice == "Test to see of any two athletes are equal") {
			compareAtheletes();
		} else if (menuChoice == "Display what each athlete does") {
			displayAthletesActions();
		} else if (menuChoice == "Quit") {
			JOptionPane.showMessageDialog(null, "GOODBYE");
	    	System.exit(0);
		}
	}
	
	private static void addAthlete() {
		JTextField firstName = new JTextField();
		JTextField lastName = new JTextField();
		JTextField age = new JTextField();
		
		Object [] fields ={
			firstName,
			lastName,
			age
		};
		
		int result = JOptionPane.showConfirmDialog(null, fields, 
	               "Please enter the following information for your athlete", JOptionPane.OK_CANCEL_OPTION);
		
		if (result == JOptionPane.OK_OPTION) {
	         System.out.println("Person: " + person.getText());
	      }
	}

	private static void displayAthletesActions() {
		 for(Athlete athlete: athletes) {	
	    	if (athlete instanceof Baseballer) {
	    		((Baseballer)athlete).doThis("I swing my bat.");
	    	} else if (athlete instanceof Footballer) {
	    		((Footballer)athlete).doThis("I throw footballs.");
	    	} else if (athlete instanceof HockeyPlayer) {
	    		((HockeyPlayer)athlete).doThis("I wear heavy gear when I play.");
	    	} else if (athlete instanceof Golfer) {
	    		((Golfer)athlete).doThis("I swing my club and hit a small ball.");
	    	} else {
	    		((Tennist)athlete).doThis("I swing my racket and hit a ball over a net.");
	    	}

	    	System.out.println("------------------\n");
	    }
	}

	private static void displayAthletes() {
		for(Athlete athlete: athletes) { 
			System.out.println(athlete);
		}
	}

	public static Athlete selectAthlete() {
		return getAthleteFromMenu("Choose an athlete", "Athletes menu", athletes);
	}
	
	public static void compareAtheletes() {
		Athlete athleteOne = selectAthlete();
		Athlete athleteTwo = selectAthlete();
		String result = athleteOne.equals(athleteTwo) 
						? "Chosen athletes are the same"
						: "Chosen athletes are NOT the same";
		System.out.println(result);
	}
	
	private static Athlete getAthleteFromMenu(String content, String title, Athlete[] athletes) {
		Athlete selectedValue = (Athlete) JOptionPane.showInputDialog(null, content, title,
					JOptionPane.INFORMATION_MESSAGE, null,
					athletes, athletes[0]);
		 
		 return selectedValue;
	}
	
	/**
	 * menu helpers
	 * @return
	 */
	private static String getUserChoice() {
		String[] options = { 
			"Add a new athlete", 
			"Display all athletes", 
			"Test to see of any two athletes are equal", 
			"Display what each athlete does",
			"Quit"
		};
		
		return optionMenu("Choose an action", "Actions menu", options);
	}
	
	private static String optionMenu(String content, String title, String[] options) {
		 String selectedValue = (String) JOptionPane.showInputDialog(null, content, title,
					JOptionPane.INFORMATION_MESSAGE, null,
					options, options[0]);
		 
		 return selectedValue;
	}

}
