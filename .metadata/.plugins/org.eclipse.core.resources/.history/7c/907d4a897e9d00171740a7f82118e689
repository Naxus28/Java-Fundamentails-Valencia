
public class ExceptionsVideoExamples {

	public static void main(String[] args) {
		exceptionOne();
		
		exceptionTwo();
		System.out.println("In main"); // If there is an unhandled exception on lower levels of this stack call, this statement will not be printed
		
		exceptionThree();
		
	}
	
	/**
	 * first exception example
	 */
	public static void exceptionOne() {
		int a, b = 6;
		 
		 try {
			 a = b / 0;
		 } catch(ArithmeticException ae) {
			 System.out.println("Arithmetic Exception in exceptionOne: " + ae.getMessage());
		 }
	}
	
	/**
	 * second exception example -- exception handled where it first occurs on the stack
	 */
	public static void exceptionTwo() {
		System.out.println("In exceptionTwo");
		exceptionTwoStackOne(); // If there is an unhandled exception on lower levels of this stack call, this statement will not be printed
		System.out.println("Not printed if there is an unhandled excpetion in exceptionTwoStackOne");
	}
	
	public static void exceptionTwoStackOne() {
		int num;
		System.out.println("In exceptionTwoStackOne");
		
		/**
		 * num = 1 / 0
		 * This line throws an exception. If the exception is not handled no code will be executed after this line; 
		 * this includes code below the function callers (written in functions up in the stack) that invoked "exceptionTwoStackOne": exceptionTwoStackOne() and exceptionTwo()
		 */

		// handled exception
		try {
			num = 1 / 0;
			System.out.println("This line doesn't get executed");
		 } catch(ArithmeticException ae) {
			 System.out.println("Arithmetic Exception in exceptionTwoStackOne: " + ae.getMessage());
		 }
	}
	
	/**
	 * third exception example -- exception handled on the caller of the function that throws the exception
	 */
	
	public static void exceptionThree() {
		System.out.println("In exceptionThree");
		exceptionTwoStackOne(); // If there is an unhandled exception on lower levels of this stack call, this statement will not be printed
		System.out.println("Not printed if there is an unhandled excpetion in exceptionThreeStackOne");
	}
	
	public static void exceptionThreeStackOne() {
		int num;
		System.out.println("In exceptionThreeStackOne");
		
		/**
		 * num = 1 / 0
		 * This line throws an exception. If the exception is not handled no code will be executed after this line; 
		 * this includes code below the function callers (written in functions up in the stack) that invoked "exceptionTwoStackOne": exceptionTwoStackOne() and exceptionTwo()
		 */

		// unhandled exception
		num = 1 / 0;
		System.out.println("This line doesn't get executed");

	}
	

}
